<?php

namespace kulyk\yii\modules\novaposhta\models;

use Yii;
use yii\base\Model;

/**
 * ContactForm is the model behind the contact form.
 */
class CargoCost extends Model
{
    public $citySender;
    public $cityRecipient;
    public $weight;
    public $serviceType;
    public $cost;

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            // name, email, subject and body are required
            [['citySender', 'cityRecipient', 'weight', 'serviceType'], 'required'],
            ['cost','number'],

        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'citySender'=>Yii::t('np','City of Sender'),
            'cityRecipient'=>Yii::t('np','City of Recipient'),
            'serviceType'=>Yii::t('np','Type of Delivery'),
            'cost'=>Yii::t('np','Cost of Cargo').', '.Yii::t('np','uah'),
            'weight'=>Yii::t('np','Weight').', '.Yii::t('np','kg'),
        ];
    }/**/

    public function getServiceTypes(){
       $types =  [
           ['Ref' =>'DoorsDoors','Description'=>Yii::t('np','Door to Door')],
           ['Ref' => 'DoorsWarehouse','Description'=>Yii::t('np','Door to Warehouse')],
           ['Ref' =>  'WarehouseWarehouse','Description'=>Yii::t('np','Warehouse to Warehouse')],
           ['Ref' => 'WarehouseDoors','Description'=>Yii::t('np','Warehouse to Door')]
        ];
        return $types;
    }/**/

    public function beforeValidate()
    {
        if ($this->cost){
        $this->cost = (int)$this->cost;
        } else{
            $this->cost = 300;
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }/**/


}/* end of Model */
